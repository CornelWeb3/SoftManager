<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="eroare.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATqMAG06jAGNOowCgTqMAvk6jAMNOowCpTqMAck6jACcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATqMAXk6jANhOowD/TqMA/06jAP9OowD/TqMA/06jAP9OowDkTqMAe06j
        AAYAAAAAAAAAAAAAAABOowABTqMAeU6jAP9OowD/TqMA/06jAP9OowD/TqMA/06jAP9OowD/TqMA/06j
        AP9OowCnTqMACwAAAAAAAAAATqMAWE6jAPxMogD/Rp4A/0WeAP9GngD/Rp4A/0aeAP9GngD/Rp4A/0We
        AP9LoQD/T6MA/06jAIYAAAAATqMAFk6jANdMogD/UqYK/2qxLv9ssjD/a7Iv/2uyL/9rsi//a7Iv/2uy
        MP9tszL/VqcR/0yiAP9OowDxTqMANU6jAFxPowD/RZ4A/3q6Rv/y+Oz/9Pnu//P57f/z+e3/8/nt//P5
        7f/z+e3/9frv/5HGZ/9CnQD/T6MA/06jAIxOowCZT6MA/0SeAP+BvlD/////////////////////////
        //////////////////+aynP/QZ0A/06jAP9OowDGTqMAsE+jAP9EngD/f71N////////////////////
        ////////////////////////mMlv/0GdAP9OowD/TqMA406jALBPowD/RJ4A/3+9Tf//////////////
        /////////////////////////////5jJb/9BnQD/TqMA/06jAOVOowCcT6MA/0SeAP+Cv1L/////////
        //////////////////////////////////+cy3b/QJ0A/06jAP9OowDJTqMAZE+jAP9JoAD/arEr/8Lf
        pf/B36j/3+7S/87mu//H4rP/4/DY/8Lfqf/G4az/e7pE/0afAP9OowD/TqMAk06jABtOowDeT6MA/0ui
        AP9FnwD/PZsA/3i5P/+hznn/nMt0/4nCV/8+mgD/RZ8A/0qhAP9PowD/TqMA9U6jADwAAAAATqMAZk6j
        AP9OowD/TaMA/02iAP9LogD/VqcO/1inD/9MogD/TaIA/02jAP9OowD/TqMA/06jAJMAAAAAAAAAAE6j
        AAROowCMTqMA/06jAP9OowD/TqMA/0yiAP9MogD/TqMA/06jAP9OowD/TqMA/06jALdOowAPAAAAAAAA
        AAAAAAAATqMAAU6jAG9OowDkTqMA/06jAP9OowD/TqMA/06jAP9OowD/TqMA7k6jAI5OowAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATqMAJ06jAHpOowC0TqMA1E6jANZOowC9TqMAhU6jADUAAAAAAAAAAAAA
        AAAAAAAA8A8AAOADAACAAQAAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIAB
        AADAAwAA8A8AAA==
</value>
  </data>
</root>